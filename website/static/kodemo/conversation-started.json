{
  "version": 1,
  "title": "Conversation Started Walkthrough",
  "story": "<h2>Conversation Started</h2><p data-effect-id=\"intro\" data-effect-subject=\"cs-skill\" data-effect-version=\"v1\">The main entry point is <code>conversation_started</code> handled by <code>ConversationStartedSkill</code>.</p><p data-effect-id=\"common\" data-effect-subject=\"common-cs\" data-effect-version=\"v1\"><code>CommonConversationStartedSkill</code> centralizes shared setup (state resets, RAG, timers, session meta).</p><p data-effect-id=\"mode\" data-effect-subject=\"switch-skill\" data-effect-version=\"v1\">Switching selects Gen1/Gen2 inbound/outbound per <code>voice_mode</code>.</p><p data-effect-id=\"gen1in\" data-effect-subject=\"gen1-in\" data-effect-version=\"v1\">Gen1 inbound flow executes greeting, fast prompt, common steps.</p><p data-effect-id=\"gen1out\" data-effect-subject=\"gen1-out\" data-effect-version=\"v1\">Gen1 outbound flow sets fast prompt and state.</p><p data-effect-id=\"gen2in\" data-effect-subject=\"gen2-in\" data-effect-version=\"v1\">Gen2 inbound flow greets via commands, updates prompt, common steps.</p><p data-effect-id=\"gen2out\" data-effect-subject=\"gen2-out\" data-effect-version=\"v1\">Gen2 outbound flow applies outbound delay, follow-up timers and greeting; then updates prompt and common steps.</p><p data-effect-id=\"timers\" data-effect-subject=\"set-followup\" data-effect-version=\"v1\">Follow-up timers are applied based on inbound/outbound context.</p><p data-effect-id=\"prompt\" data-effect-subject=\"make-fast-prompt\" data-effect-version=\"v1\">Fast prompts are built to initialize session/system context.</p><p data-effect-id=\"meta\" data-effect-subject=\"update-meta\" data-effect-version=\"v1\">Session metadata is updated for analytics and routing.</p><p data-effect-id=\"session\" data-effect-subject=\"start-session\" data-effect-version=\"v1\">New session creation also sets the program timer for session timeout.</p><p data-effect-id=\"phones\" data-effect-subject=\"create-phone-actors\" data-effect-version=\"v1\">Phone actors are created to represent user phone endpoints.</p>",
  "subjects": {
    "cs-skill": {
      "type": "code",
      "name": "ConversationStartedSkill.hbs",
      "versions": {
        "v1": {
          "value": "{{StartNotInterruptibleBlock()}}\n\n{{Set(name=\"user_id\", value=GetUser(field=\"id\"))}}\n\n{{Set(name=\"current_actor_integration_idn\", value=GetActor(field=\"integrationIdn\"))}}\n{{SetPersonaAttribute(id=user_id, field=\"current_integration_idn\", value=\" \")}}\n\n{{!-- TODO: Refactor, split and speed up `Conversation Started` Skill --}}\n{{#if current_actor_integration_idn == \"vapi\"}}\n    {{SetCustomerAttribute(field=\"project_attributes_setting_voice_integration_service\", value=\"VAPI Integration\")}}\n{{/if}}\n\n\n{{#if current_actor_integration_idn == \"newo_voice\"}}\n    {{SetCustomerAttribute(field=\"project_attributes_setting_voice_integration_service\", value=\"NEWO Voice Integration\")}}\n\n    {{Set(name=\"actor_id\", value=GetActor(field=\"id\"))}}\n    {{SetPersonaAttribute(id=user_id, field=\"last_convo_actor_id\", value=actor_id)}}\n\n    {{#if GetCustomerAttribute(field=\"project_attributes_setting_voice_integration_service_voice_mode\") == \"voice-to-voice\"}}\n        {{Set(name=\"interval\", value=GetCustomerAttribute(field=\"project_attributes_setting_follow_up_timer_voice_interval_conversation_started_inbound\"))}}\n        {{Set(name=\"applied_interval\", value=_utilsSetFollowUpTimerSkill(interval=interval, personaId=user_id))}}\n        {{_utilsSendSystemLogSkill(\n            message=Concat(\"Follow-up timer was set to \", applied_interval, \" due to `conversation_started` event.\")\n        )}}\n\n        {{Set(name=\"greeting_phrase\", value=GetPersonaAttribute(id=user_id, field=\"generated_greeting_phrase\"))}}\n\n        {{Set(name=\"is_outbound_call\", value=_utilsPersonaAttributeGetWithDefaultsSkill(id=user_id, field=\"outbound_call\", defaultValue=\"False\"))}}\n        {{#if is_outbound_call == \"False\"}}\n            {{#if IsEmpty(text=greeting_phrase)}}\n                {{Set(name=\"greeting_phrase\", value=GetCustomerAttribute(field=\"project_representative_agent_voice_greeting_phrase\"))}}\n            {{/if}}\n            {{_gen2SendCommandSkill(command=Concat(\"Greet the user: \", greeting_phrase), userId=user_id)}}\n        {{else}}\n            {{Set(name=\"greeting_phrase\", value=GetPersonaAttribute(id=user_id, field=\"greeting_phrase\"))}}\n            {{Sleep(duration=\"2\", interruptible=\"False\")}}\n            {{_gen2SendCommandSkill(command=Concat(\"Greet the user: \", greeting_phrase), userId=user_id)}}\n        {{/if}}\n    {{/if}}\n{{/if}}\n\n{{SetState(name=\"user_reply_buffer\", value=\" \")}}\n{{SetState(name=\"fast_prompt\", value=\" \")}}\n{{SetState(name=\"corrected_memory\", value=\" \")}}\n\n{{#if _utilsFeatureFlagIsActiveSkill(featureFlagName=\"multi_location\")}}\n    {{SetPersonaAttribute(id=user_id, field=\"multi_location_current_location\", value=\"default\")}}\n{{/if}}\n\n{{SetPersonaAttribute(id=user_id, field=\"working_hours_status\", value=\" \")}}\n{{SetPersonaAttribute(id=user_id, field=\"working_hours_phrase\", value=\" \")}}\n{{SendSystemEvent(eventIdn=\"build_operating_phrase\", connectorIdn=\"system\")}}\n\n{{SendSystemEvent(eventIdn=\"prepare_rag_context_command\")}}\n{{SendSystemEvent(eventIdn=\"prepare_injecting_data\", global=True)}}\n\n{{! TODO: Define whether `detected_phone_number` must be reset on `conversation_ended` or not }}\n{{SetPersonaAttribute(id=user_id, field=\"detected_phone_number_country_code\", value=\"null\")}}\n{{SetPersonaAttribute(id=user_id, field=\"detected_phone_number_with_country_code\", value=\"null\")}}\n{{SetPersonaAttribute(id=user_id, field=\"detected_phone_number_without_country_code\", value=\"null\")}}\n\n{{!-- TODO: Refactor based on `_startNewSessionSkill` and `UserSMSReplySkill` --}}\n{{Set(name=\"conversation_channel\", value=_utilsGetConversationChannelSkill(integrationIdn=current_actor_integration_idn))}}\n{{#if conversation_channel == \"phone\"}}\n    {{#if GetPersonaAttribute(id=user_id, field=\"outbound_call\") == \"True\"}}\n        {{SetPersonaAttribute(id=user_id, field=\"call_happened\", value=\"True\")}}\n    {{/if}}\n\n    {{Set(name=\"actor_id\", value=GetActor(field=\"id\"))}}\n\n    {{#if current_actor_integration_idn == \"newo_voice\"}}\n        {{#if GetCustomerAttribute(field=\"project_attributes_setting_voice_integration_service_voice_mode\") != \"voice-to-voice\"}}\n            {{Set(name=\"interval\", value=GetCustomerAttribute(field=\"project_attributes_setting_follow_up_timer_voice_interval_conversation_started_inbound\"))}}\n            {{Set(name=\"applied_interval\", value=_utilsSetFollowUpTimerSkill(interval=interval, personaId=user_id))}}\n            {{_utilsSendSystemLogSkill(\n                message=Concat(\"Follow-up timer was set to \", applied_interval, \" due to `conversation_started` event.\")\n            )}}\n\n            {{SetPersonaAttribute(id=user_id, field=\"last_convo_actor_id\", value=actor_id)}}\n            {{Set(name=\"greeting_phrase\", value=GetPersonaAttribute(id=user_id, field=\"generated_greeting_phrase\"))}}\n\n            {{#if IsEmpty(text=greeting_phrase)}}\n                {{Set(name=\"greeting_phrase\", value=GetCustomerAttribute(field=\"project_representative_agent_voice_greeting_phrase\"))}}\n            {{/if}}\n\n            {{Set(name=\"is_outbound_call\", value=_utilsPersonaAttributeGetWithDefaultsSkill(id=user_id, field=\"outbound_call\", defaultValue=\"False\"))}}\n            {{#if is_outbound_call == \"False\"}}\n                {{SendMessage(message=greeting_phrase, actorIds=actor_id)}}\n            {{/if}}\n        {{/if}}\n\n        {{#if GetCustomerAttribute(field=\"project_attributes_setting_voice_integration_service_voice_mode\") == \"voice-to-voice\"}}\n            {{Set(name=\"fast_prompt\", value=_gen2MakeFastPromptSkill(userId=user_id))}}\n            {{SendCommand(commandIdn=\"update_session\", integrationIdn=\"newo_voice\", connectorIdn=\"newo_voice_connector\", instructions=fast_prompt, actorId=actor_id)}}\n        {{else}}\n            {{Set(name=\"fast_prompt\", value=_makeFastPrompt(userId=user_id))}}\n            {{SetState(name=\"fast_prompt\", value=fast_prompt)}}\n        {{/if}}\n\n    {{/if}}\n\n    {{Set(name=\"external_id\", value=GetActor(field=\"externalId\"))}}\n\n    {{SetPersonaAttribute(id=user_id, field=\"last_convo_actor_id\", value=actor_id)}}\n    {{UpdateConversationMetaSkill(userId=user_id)}}\n\n    {{#if GetTriggeredAct(fields=[\"isSharedPhoneNumber\"]) == \"true\"}}\n        {{SetPersonaAttribute(id=user_id, field=\"temporal\", value=\"True\")}}\n        {{!-- TODO: Add phone number to Attribute `project_attributes_setting_common_phone_numbers` if not specified --}}\n    {{else}}\n        {{Set(name=\"detected_phone_number_with_country_code\", value=external_id)}}\n\n        {{!-- TODO: Potentially, remove temporal fix --}}\n        {{Set(name=\"detected_phone_number_with_country_code\", value=Stringify(detected_phone_number_with_country_code.replace(\"+\", \" \")))}}\n\n        {{_utilsCreatePhoneActorsSkill(userId=user_id, phoneNumber=detected_phone_number_with_country_code)}}\n\n        {{!-- Define user's phone number in background --}}\n        {{SendSystemEvent(\n            eventIdn=\"define_user_phone_number\",\n            user_id=user_id,\n            user_phone_number_with_country_code=detected_phone_number_with_country_code\n        )}}\n\n    {{/if}}\n\n    {{!-- TODO: Move such functionality to Platform side --}}\n    {{!-- Hang phone if phone number is presented in \"blocked phone numbers\" list --}}\n    {{Set(name=\"blocked_phone_numbers\", value=GetCustomerAttribute(field=\"project_attributes_setting_blocked_phone_numbers\"))}}\n    {{#if not IsEmpty(text=blocked_phone_numbers)}}\n        {{Set(name=\"phone_index\", value=GetIndexesOfItemsArrayJSON(array=blocked_phone_numbers,filterPath=Concat(\"$[?(@=='\", external_id, \"')]\")))}}\n        {{#if not IsEmpty(text=phone_index)}}\n            {{Set(name=\"voice_integration_service\", value=GetCustomerAttribute(field=\"project_attributes_setting_voice_integration_service\"))}}\n            {{#if voice_integration_service == \"VAPI Integration\"}}\n                {{SendCommand(\n                    commandIdn=\"stop_call\",\n                    integrationIdn=\"vapi\",\n                    connectorIdn=\"vapi_caller\",\n                    actorId=actor_id\n                )}}\n            {{/if}}\n            {{#if voice_integration_service == \"NEWO Voice Integration\"}}\n                {{SendCommand(\n                    commandIdn=\"stop_call\",\n                    integrationIdn=\"newo_voice\",\n                    connectorIdn=\"newo_voice_connector\",\n                    actorId=actor_id\n                )}}\n            {{/if}}\n        {{/if}}\n    {{/if}}\n\n    {{Set(name=\"project_business_time_zone\", value=GetCustomerAttribute(field=\"project_business_time_zone\"))}}\n    {{Set(name=\"current_datetime\", value=GetDatetime(format=\"datetime\", timezone=project_business_time_zone, weekday=True))}}\n    {{_startNewSessionSkill(userId=user_id, actorIntegrationIdn=current_actor_integration_idn, currentDateTime=current_datetime, integrationIdn=current_actor_integration_idn)}}\n\n    {{_utilsSendSystemLogSkill(message=\"New conversation started.\")}}\n{{/if}}\n\n{{Set(name=\"url\", value=GetTriggeredAct(fields=[\"web_chat_url\"]))}}\n\n{{#if IsEmpty(text=GetPersonaAttribute(id=user_id, field=\"url_params\"))}}\n    {{#if not IsEmpty(text=url)}}\n        {{SetPersonaAttribute(id=user_id, field=\"url_params\", value=_getUrlParamsSkill(url=url))}}\n    {{/if}}\n{{/if}}\n\n{{Set(name=\"session_timeout\", value=GetCustomerAttribute(field=\"project_attributes_setting_conversation_session_timeout\"))}}\n\n{{#if IsEmpty(text=session_timeout)}}\n    {{Set(name=\"session_timeout\", value=\"300\")}}\n{{/if}}\n\n{{!-- To not start session on Chat opening (conversation started event is being sent) --}}\n{{#if current_actor_integration_idn != \"newo_chat\"}}\n    {{SendCommand(\n        commandIdn=\"set_timer\",\n        integrationIdn=\"program_timer\",\n        connectorIdn=\"session_timer\",\n        personaId=user_id,\n        timerName=\"session_timer\",\n        interval=session_timeout,\n        eventIdn=\"end_session\"\n    )}}\n{{/if}}\n\n{{StopNotInterruptibleBlock()}}\n"
        }
      }
    },
    "common-cs": {
      "type": "code",
      "name": "CommonConversationStartedSkill.hbs",
      "versions": {
        "v1": {
          "value": "{{#if step == \"1\"}}\n    {{SetState(name=\"user_reply_buffer\", value=\" \")}}\n    {{SetState(name=\"fast_prompt\", value=\" \")}}\n    {{SetState(name=\"corrected_memory\", value=\" \")}}\n\n    {{#if _utilsFeatureFlagIsActiveSkill(featureFlagName=\"multi_location\")}}\n        {{SetPersonaAttribute(id=userId, field=\"multi_location_current_location\", value=\"default\")}}\n    {{/if}}\n\n    {{SetPersonaAttribute(id=userId, field=\"working_hours_status\", value=\" \")}}\n    {{SetPersonaAttribute(id=userId, field=\"working_hours_phrase\", value=\" \")}}\n    {{SendSystemEvent(eventIdn=\"build_operating_phrase\", connectorIdn=\"system\")}}\n\n    {{SendSystemEvent(eventIdn=\"prepare_rag_context_command\")}}\n    {{SendSystemEvent(eventIdn=\"prepare_injecting_data\", global=\"True\")}}\n\n    {{! TODO: Define whether `detected_phone_number` must be reset on `conversation_ended` or not }}\n    {{SetPersonaAttribute(id=userId, field=\"detected_phone_number_country_code\", value=\"null\")}}\n    {{SetPersonaAttribute(id=userId, field=\"detected_phone_number_with_country_code\", value=\"null\")}}\n    {{SetPersonaAttribute(id=userId, field=\"detected_phone_number_without_country_code\", value=\"null\")}}\n    {{Return()}}\n{{/if}}\n\n{{#if step == \"2\"}}\n    {{UpdateConversationMetaSkill(userId=userId)}}\n\n    {{Set(name=\"external_id\", value=GetActor(field=\"externalId\"))}}\n\n    {{#if GetTriggeredAct(fields=[\"isSharedPhoneNumber\"]) == \"true\"}}\n        {{SetPersonaAttribute(id=userId, field=\"temporal\", value=\"True\")}}\n        {{!-- TODO: Add phone number to Attribute `project_attributes_setting_common_phone_numbers` if not specified --}}\n    {{else}}\n        {{Set(name=\"detected_phone_number_with_country_code\", value=external_id)}}\n\n        {{!-- TODO: Potentially, remove temporal fix --}}\n        {{Set(name=\"detected_phone_number_with_country_code\", value=Stringify(detected_phone_number_with_country_code.replace(\"+\", \" \")))}}\n\n        {{_utilsCreatePhoneActorsSkill(userId=userId, phoneNumber=detected_phone_number_with_country_code)}}\n\n        {{!-- Define user's phone number in background --}}\n        {{SendSystemEvent(\n            eventIdn=\"define_user_phone_number\",\n            user_id=userId,\n            user_phone_number_with_country_code=detected_phone_number_with_country_code\n        )}}\n    {{/if}}\n\n    {{!-- TODO: Move such functionality to Platform side --}}\n    {{!-- Hang phone if phone number is presented in \"blocked phone numbers\" list --}}\n    {{_checkPhoneNumberSkill(phoneNumber=external_id)}}\n\n    {{Set(name=\"project_business_time_zone\", value=GetCustomerAttribute(field=\"project_business_time_zone\"))}}\n    {{Set(name=\"current_datetime\", value=GetDatetime(format=\"datetime\", timezone=project_business_time_zone, weekday=True))}}\n    {{Set(name=\"current_actor_integration_idn\", value=GetActor(field=\"integrationIdn\"))}}\n    {{_startNewSessionSkill(userId=userId, actorIntegrationIdn=current_actor_integration_idn, currentDateTime=current_datetime, integrationIdn=current_actor_integration_idn)}}\n\n    {{_utilsSendSystemLogSkill(message=\"New conversation started.\")}}\n\n    {{SendSystemEvent(eventIdn=\"extend_session\", connectorIdn=\"system\")}}\n{{/if}}\n"
        }
      }
    },
    "switch-skill": {
      "type": "code",
      "name": "SwitchConversationStartedSkill.hbs",
      "versions": {
        "v1": {
          "value": "{{Set(name=\"mode\", value=GetCustomerAttribute(field=\"project_attributes_setting_voice_integration_service_voice_mode\"))}}\n\n{{#if mode == \"transcriber\"}}\n    {{SetState(name=\"conversation_started_newo_voice_skill\", value=\"Gen1ConversationStartedInboundSkill\")}}\n{{/if}}\n\n{{#if mode == \"voice-to-voice\"}}\n    {{SetState(name=\"conversation_started_newo_voice_skill\", value=\"Gen2ConversationStartedInboundSkill\")}}\n{{/if}}"
        }
      }
    },
    "gen1-in": {
      "type": "code",
      "name": "Gen1 Inbound.hbs",
      "versions": {
        "v1": {
          "value": "{{StartNotInterruptibleBlock()}}\n\n{{Set(name=\"user_id\", value=GetUser(field=\"id\"))}}\n{{Set(name=\"actor_id\", value=GetActor(field=\"id\"))}}\n\n{{SetPersonaAttribute(id=user_id, field=\"last_convo_actor_id\", value=actor_id)}}\n{{Set(name=\"greeting_phrase\", value=GetPersonaAttribute(id=user_id, field=\"greeting_phrase\"))}}\n\n{{#if IsEmpty(text=greeting_phrase)}}\n    {{Set(name=\"greeting_phrase\", value=GetCustomerAttribute(field=\"project_representative_agent_voice_greeting_phrase\"))}}\n{{/if}}\n\n{{SendMessage(message=greeting_phrase, actorIds=actor_id)}}\n\n{{CommonConversationStartedSkill(userId=user_id, step=\"1\")}}\n\n{{Set(name=\"fast_prompt\", value=_makeFastPrompt(userId=user_id))}}\n{{SetState(name=\"fast_prompt\", value=fast_prompt)}}\n\n{{CommonConversationStartedSkill(userId=user_id, step=\"2\")}}\n\n{{SetCustomerAttribute(field=\"project_attributes_setting_voice_integration_service\", value=\"NEWO Voice Integration\")}}\n\n{{StopNotInterruptibleBlock()}}\n"
        }
      }
    },
    "gen1-out": {
      "type": "code",
      "name": "Gen1 Outbound.hbs",
      "versions": {
        "v1": {
          "value": "{{StartNotInterruptibleBlock()}}\n\n{{Set(name=\"user_id\", value=GetUser(field=\"id\"))}}\n{{Set(name=\"actor_id\", value=GetActor(field=\"id\"))}}\n{{SetPersonaAttribute(id=user_id, field=\"last_convo_actor_id\", value=actor_id)}}\n\n{{CommonConversationStartedSkill(userId=user_id, step=\"1\")}}\n\n{{Set(name=\"fast_prompt\", value=_makeFastPrompt(userId=user_id))}}\n{{SetState(name=\"fast_prompt\", value=fast_prompt)}}\n\n{{SetPersonaAttribute(id=user_id, field=\"call_happened\", value=\"True\")}}\n\n{{CommonConversationStartedSkill(userId=user_id, step=\"2\")}}\n\n{{SetState(name=\"conversation_started_newo_voice_skill\", value=\"Gen1ConversationStartedInboundSkill\")}}\n\n{{SetCustomerAttribute(field=\"project_attributes_setting_voice_integration_service\", value=\"NEWO Voice Integration\")}}\n\n{{StopNotInterruptibleBlock()}}\n"
        }
      }
    },
    "gen2-in": {
      "type": "code",
      "name": "Gen2 Inbound.hbs",
      "versions": {
        "v1": {
          "value": "{{StartNotInterruptibleBlock()}}\n\n{{Set(name=\"user_id\", value=GetUser(field=\"id\"))}}\n{{Set(name=\"actor_id\", value=GetActor(field=\"id\"))}}\n{{SetPersonaAttribute(id=user_id, field=\"last_convo_actor_id\", value=actor_id)}}\n\n{{Set(name=\"greeting_phrase\", value=GetPersonaAttribute(id=user_id, field=\"greeting_phrase\"))}}\n\n{{#if IsEmpty(text=greeting_phrase)}}\n    {{Set(name=\"greeting_phrase\", value=GetCustomerAttribute(field=\"project_representative_agent_voice_greeting_phrase\"))}}\n{{/if}}\n\n{{!-- Setting follow up timer in case the first generation was not triggered --}}\n{{Set(name=\"interval\", value=GetCustomerAttribute(field=\"project_attributes_setting_follow_up_timer_voice_interval_conversation_started_inbound\"))}}\n{{Set(name=\"applied_interval\", value=_utilsSetFollowUpTimerSkill(interval=interval, personaId=user_id))}}\n{{_utilsSendSystemLogSkill(\n    message=Concat(\"Follow-up timer was set to \", applied_interval, \" due to `conversation_started` event.\")\n)}}\n\n{{_gen2SendCommandSkill(command=Concat(\"Greet the user and tell exactly this: \", greeting_phrase), userId=user_id)}}\n\n{{CommonConversationStartedSkill(userId=user_id, step=\"1\")}}\n\n{{Gen2UpdateCurrentPromptSkill()}}\n\n{{CommonConversationStartedSkill(userId=user_id, step=\"2\")}}\n\n{{SetCustomerAttribute(field=\"project_attributes_setting_voice_integration_service\", value=\"NEWO Voice Integration\")}}\n\n{{StopNotInterruptibleBlock()}}\n"
        }
      }
    },
    "gen2-out": {
      "type": "code",
      "name": "Gen2 Outbound.hbs",
      "versions": {
        "v1": {
          "value": "{{StartNotInterruptibleBlock()}}\n\n{{Set(name=\"user_id\", value=GetUser(field=\"id\"))}}\n{{Set(name=\"actor_id\", value=GetActor(field=\"id\"))}}\n{{SetPersonaAttribute(id=user_id, field=\"last_convo_actor_id\", value=actor_id)}}\n\n{{!-- TODO: guess better approach to disable greeting in convoagent for outbound calls and allow the user to control this process --}}\n{{Set(name=\"outbound_greeting_delay\", value=GetCustomerAttribute(field=\"project_attributes_setting_outbound_greeting_delay\"))}}\n{{#if outbound_greeting_delay != \"0\"}}\n  {{Sleep(duration=outbound_greeting_delay, interruptible=\"False\")}}\n{{/if}}\n\n{{Set(name=\"interval\", value=GetCustomerAttribute(field=\"project_attributes_setting_follow_up_timer_voice_interval_conversation_started_outbound\"))}}\n{{Set(name=\"applied_interval\", value=_utilsSetFollowUpTimerSkill(interval=interval, personaId=user_id))}}\n{{_utilsSendSystemLogSkill(\n    message=Concat(\"Follow-up timer was set to \", applied_interval, \" due to `conversation_started` event.\")\n)}}\n\n{{_gen2SendCommandSkill(\n  command=Concat(\"Greet the user: \", GetPersonaAttribute(id=user_id, field=\"greeting_phrase\")),\n  userId=user_id\n)}}\n\n{{SetPersonaAttribute(id=user_id, field=\"call_happened\", value=\"True\")}}\n\n{{CommonConversationStartedSkill(userId=user_id, step=\"1\")}}\n\n{{Gen2UpdateCurrentPromptSkill()}}\n\n{{CommonConversationStartedSkill(userId=user_id, step=\"2\")}}\n\n{{SetState(name=\"conversation_started_newo_voice_skill\", value=\"Gen2ConversationStartedInboundSkill\")}}\n\n{{SetCustomerAttribute(field=\"project_attributes_setting_voice_integration_service\", value=\"NEWO Voice Integration\")}}\n\n{{StopNotInterruptibleBlock()}}\n"
        }
      }
    },
    "greet-out": {
      "type": "code",
      "name": "GreetUserOutboundSkill.hbs",
      "versions": {
        "v1": {
          "value": "{{StartNotInterruptibleBlock()}}\n\n{{Set(name=\"user_id\", value=GetUser(field=\"id\"))}}\n{{SendMessage(message=GetPersonaAttribute(id=user_id, field=\"greeting_phrase\"))}}\n{{SetState(name=\"phone_reply_skill\", value=\"UserPhoneReplySkill\")}}\n\n{{Set(name=\"interval\", value=GetCustomerAttribute(field=\"project_attributes_setting_follow_up_timer_voice_interval_conversation_started_outbound\"))}}\n{{Set(name=\"applied_interval\", value=_utilsSetFollowUpTimerSkill(interval=interval, personaId=user_id))}}\n{{_utilsSendSystemLogSkill(\n    message=Concat(\"Follow-up timer was set to \", applied_interval, \" due to `conversation_started` event.\")\n)}}\n\n{{StopNotInterruptibleBlock()}}\n"
        }
      }
    },
    "update-prompt": {
      "type": "code",
      "name": "Gen2UpdateCurrentPromptSkill.hbs",
      "versions": {
        "v1": {
          "value": "{{Set(name=\"user_id\", value=GetUser(field=\"id\"))}}\n\n{{Set(name=\"fast_prompt\", value=_gen2MakeUrgentPromptSkill(userId=user_id))}}\n\n{{Set(name=\"fast_prompt\", value=fast_prompt.replace(\"<<||convo_agent_rag||>>\", _getAdditionalRAGContext(userId=user_id)))}}\n\n{{SendCommand(\n  commandIdn=\"update_session\",\n  integrationIdn=\"newo_voice\",\n  connectorIdn=\"newo_voice_connector\",\n  instructions=fast_prompt,\n  actorId=_utilsGetOrSetLastConvoActorId(userId=user_id)\n)}}\n\n{{SendSystemEvent(eventIdn=\"prepare_rag_context_command\", connectorIdn=\"system\")}}\n"
        }
      }
    },
    "make-fast-prompt": {
      "type": "code",
      "name": "_makeFastPrompt.hbs",
      "versions": {
        "v1": {
          "value": "{{_startNewSessionSkill(userId=userId)}}\n\n{{StartNotInterruptibleBlock()}}\n{{Set(name=\"current_conversation_prompt\", value=_getCachedPromptSkill(userId=userId))}}\n{{StopNotInterruptibleBlock()}}\n\n{{Set(name=\"additional_global_conversation_instruction\", value=GetCustomerAttribute(field=\"project_attributes_setting_additional_global_conversation_instruction\"))}}\n\n{{Set(name=\"corrected_memory\", value=GetState(name=\"corrected_memory\"))}}\n\n{{#if not IsEmpty(text=corrected_memory)}}\n  {{Set(name=\"memory\", value=corrected_memory)}}\n{{else}}\n  {{Set(name=\"memory\", value=_getMemoryPromptSkill(userId=userId))}}\n{{/if}}\n\n{{Set(name=\"user_name\", value=GetUser(field=\"name\"))}}\n\n{{#if order == \"before_gen\"}}\n  {{Set(name=\"last_user_reply\", value=GetTriggeredAct(fields=[\"text\"]))}}\n  {{Set(name=\"last_user_reply_with_prefix\", value=Concat(user_name, \": \", last_user_reply))}}\n  {{Set(name=\"memory\", value=memory.removesuffix(last_user_reply_with_prefix))}}\n{{/if}}\n\n{{Set(name=\"greeting_phrase\", value=_getGreetingPhraseSkill(userId=userId))}}\n\n{{Set(name=\"working_hours_phrase\", value=GetPersonaAttribute(id=userId, field=\"working_hours_phrase\"))}}\n\n{{Set(name=\"memories\", value=GetPersonaAttribute(id=userId, field=\"memories\"))}}\n{{#if IsEmpty(text=memories)}}\n  {{Set(name=\"memories\", value=\"There are no past interactions\")}}\n{{/if}}\n\n{{#system~}}\n{{current_conversation_prompt}}\n\n{{_getPromptCalendarSkill()}}\n\n{{_getAdditionalBusinessContext(userId=userId)}}\n<<||convo_agent_rag||>>\n\n<UserInformation alt=\"user information\" role=\"context\">\n{{GetPersonaAttribute(id=userId, field=\"_private_dynamic_user_information\")}}\n</UserInformation>\n\n<PreviousConversationSummary alt=\"ConvoAgent-user previous conversation summary\" role=\"context\">\n{{memories}}\n</PreviousConversationSummary>\n\n<ConversationMeta role=\"context\">\n{{GetPersonaAttribute(id=userId, field=\"conversation_meta\")}}\n\n{{#if not IsEmpty(text=working_hours_phrase)}}<When the=\"user is asking about business currently open\">\n> {{working_hours_phrase}}\n</When>{{/if}}\n\n{{_getCustomSectionSkill(userId=userId)}}\n\n<<||convo_agent_thoughts||>>\n</ConversationMeta>\n\n{{_getPromptAvailabilitySkill(userId=userId)}}\n\n{{_getActionsStatesSkill(userId=userId)}}\n\n<Conversation alt=\"ConvoAgent-user conversation\" role=\"context\">\n{{#if not IsEmpty(text=greeting_phrase)}}ConvoAgent: {{greeting_phrase}}\n{{/if}}{{memory}}\n{{#if order == \"before_gen\"}}{{#if IsEmpty(text=baseInstruction)}}{{user_name}}: {{GetState(name=\"user_reply_buffer\")}}{{/if}}{{else}}{{#if IsEmpty(text=baseInstruction)}}{{user_name}}: <<||last_user_message||>>{{/if}}{{/if}}\n</Conversation>\n\nSUPERUSER# Next Instruction:\n- {{#if IsEmpty(text=baseInstruction)}}Using the ConvoAgent instructions, **generate a response to the user matching the same language as the user last message**. Your response must *only* be the ConvoAgent's direct reply for the current turn, and must NOT include any part of the preceding **conversation**. At this moment, you are not sharing your thoughts; instead, you are crafting a direct reply to the user.{{else}}{{baseInstruction}}{{/if}}\n- In the <ConvoAgentMainInstruction> section, you are provided with suggested quotes for your responses. You must speak them in the same language the user is speaking to you.\n{{#if not IsEmpty(text=additional_global_conversation_instruction)}}**ConvoAgent SELF-INSTRUCTION:** {{additional_global_conversation_instruction}}{{/if}}\n\nConvoAgent:{{~/system}}\n\n{{Return(val=GetCurrentPrompt())}}\n"
        }
      }
    },
    "gen2-fast-prompt": {
      "type": "code",
      "name": "_gen2MakeFastPromptSkill.hbs",
      "versions": {
        "v1": {
          "value": "{{_startNewSessionSkill(userId=userId)}}\n\n{{StartNotInterruptibleBlock()}}\n{{Set(name=\"current_conversation_prompt\", value=_getCachedPromptSkill(userId=userId))}}\n{{StopNotInterruptibleBlock()}}\n\n{{Set(name=\"additional_global_conversation_instruction\", value=GetCustomerAttribute(field=\"project_attributes_setting_additional_global_conversation_instruction\"))}}\n\n{{Set(name=\"memory\", value=_gen2GetPromptMemorySkill(userId=userId, includeSummary=\"True\"))}}\n\n{{Set(name=\"working_hours_phrase\", value=GetPersonaAttribute(id=userId, field=\"working_hours_phrase\"))}}\n\n{{Set(name=\"memories\", value=GetPersonaAttribute(id=userId, field=\"memories\"))}}\n{{#if IsEmpty(text=memories)}}\n  {{Set(name=\"memories\", value=\"There are no past interactions\")}}\n{{/if}}\n\n{{#system~}}\n{{current_conversation_prompt}}\n\n{{_getPromptCalendarSkill()}}\n\n{{_getAdditionalBusinessContext(userId=userId)}}\n\n{{!--\n<UserInformation alt=\"user information\" role=\"context\">\n{{GetPersonaAttribute(id=userId, field=\"_private_dynamic_user_information\")}}\n</UserInformation>\n--}}\n<PreviousConversationSummary alt=\"ConvoAgent-user previous conversation summary\" role=\"context\">\n{{memories}}\n</PreviousConversationSummary>\n\n<ConversationMeta role=\"context\">\n{{GetPersonaAttribute(id=userId, field=\"conversation_meta\")}}\n\n{{#if not IsEmpty(text=working_hours_phrase)}}<When the=\"user is asking about business currently open\">\n> {{working_hours_phrase}}\n</When>{{/if}}\n\n{{_getCustomSectionSkill(userId=userId)}}\n</ConversationMeta>\n\nSUPERUSER# Next Instruction: Using the ConvoAgent instructions and the `KEY DIRECTIVES` **generate a response to the user**. You will see a sequence of repeating **KEY DIRECTIVES** instructions. You must strictly focus on the latest **KEY DIRECTIVES**.\nYour response must *only* be the ConvoAgent's direct reply for the current turn, and must NOT include any part of the preceding **conversation**. At this moment, you are not sharing your thoughts; instead, you are crafting a direct reply to the user.\nIn the <ConvoAgentMainInstruction> section, you are provided with suggested quotes for your responses. You must speak them in the same language the user is speaking to you.\nThe user may be speaking from a public place, where background conversations or a television might be audible. Please ignore these external sounds and respond only to the main speaker's messages.\nThe user often responds and confirms with short one-word answers - \"Yes\", \"Yep\", \"No\", \"Reserve\", \"Tomorrow\", \"Patient\", etc. - that's okay, Just reply and proceed according to the instructions. If you're not sure you heard something correctly or the user's response doesn't match the conversation at all, instead of repeating your previous phrase, ask: \"Sorry, I didn't quite catch that...\" or \"Pardon me, what did you say?\".\n{{#if not IsEmpty(text=additional_global_conversation_instruction)}}**ConvoAgent SELF-INSTRUCTION:** {{additional_global_conversation_instruction}}{{/if}}\n\nConvoAgent:{{~/system}}\n\n{{Return(val=GetCurrentPrompt())}}\n"
        }
      }
    },
    "set-followup": {
      "type": "code",
      "name": "_utilsSetFollowUpTimerSkill.jinja",
      "versions": {
        "v1": {
          "value": "{# If `interval == -1`, it means that timer is disabled #}\n{% if interval == \"-1\" %}\n    {% set enabled = \"False\" %}\n{% else %}\n    {% set enabled = \"True\" %}\n{% endif %}\n\n{# If `interval` is not set, specify default value depending on conversation channel #}\n{% if not interval.strip() %}\n    {% set conversation_channel = _utilsGetConversationChannelSkill(integrationIdn=_utilsGetCurrentIntegrationIdnSkill(userId=personaId)) %}\n    {% if conversation_channel == \"phone\" %}\n        {% set interval = \"25\" %}\n    {% else %}\n        {% set interval = \"75\" %}\n    {% endif %}\n{% endif %}\n\n{{SendCommand(\n    commandIdn=\"set_timer\",\n    integrationIdn=\"program_timer\",\n    connectorIdn=\"message_followup\",\n    eventIdn=\"follow_up_message\",\n    timerName=\"follow_up_timer\",\n    personaId=personaId,\n    interval=interval,\n    enabled=enabled\n)}}\n\n{{Return(val=interval)}}\n"
        }
      }
    },
    "update-meta": {
      "type": "code",
      "name": "UpdateConversationMetaSkill.hbs",
      "versions": {
        "v1": {
          "value": "{{!-- TODO: Rework getting conversation meta - currently, it lags behind one conversational turn --}}\n\n{{!-- TODO: Unify such blocks in all places - currently, similar code is being duplicated in a lot of places --}}\n\n{{#if IsEmpty(text=userId)}}\n  {{Set(name=\"userId\", value=GetUser(field=\"id\"))}}\n{{/if}}\n\n{{Set(name=\"time_zone\", value=_getTimeZoneSkill(userId=userId))}}\n{{Set(name=\"current_date\", value=GetDatetime(format=\"date\", timezone=time_zone))}}\n{{Set(name=\"current_time\", value=GetDatetime(format=\"time\", timezone=time_zone, weekday=False))}}\n{{Set(name=\"current_date_week_day\", value=GetDatetime(format=\"date\", timezone=time_zone, weekday=True))}}\n{{Set(name=\"current_week_day\", value=Stringify(current_date_week_day.replace(Concat(current_date, \", \"), \" \")))}}\n\n{{Set(name=\"am_hours\", value=[\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\"])}}\n{{Set(name=\"pm_hours\", value=[\"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"00\"])}}\n\n{{Set(name=\"current_hour_list\", value=current_time.split(\":\"))}}\n{{Set(name=\"current_time_list_string\", value=Stringify(current_hour_list))}}\n{{Set(name=\"current_time_list_string\", value=current_time_list_string.replace(\"'\", '\"'))}}\n{{Set(name=\"current_hour\", value=Stringify(GetItemsArrayByIndexesJSON(array=current_time_list_string, indexes=0)))}}\n{{Set(name=\"current_minute\", value=Stringify(GetItemsArrayByIndexesJSON(array=current_time_list_string, indexes=1)))}}\n{{Set(name=\"current_second\", value=Stringify(GetItemsArrayByIndexesJSON(array=current_time_list_string, indexes=2)))}}\n{{Set(name=\"am_prefix_should_be_set\", value=am_hours.count(current_hour))}}\n{{Set(name=\"pm_prefix_should_be_set\", value=pm_hours.count(current_hour))}}\n\n{{!-- Define postfix --}}\n{{Set(name=\"postfix\", value=\"AM\")}}\n{{#if pm_prefix_should_be_set != 0}}\n    {{Set(name=\"postfix\", value=\"PM\")}}\n{{/if}}\n{{#if am_prefix_should_be_set != 0}}\n    {{Set(name=\"postfix\", value=\"AM\")}}\n{{/if}}\n\n{{!-- Convert hours to AM/PM format --}}\n{{Set(name=\"twelve_current_hour\", value=current_hour)}}\n{{#if pm_prefix_should_be_set != 0}}\n  {{#if current_hour == \"12\" }}\n    {{Set(name=\"twelve_current_hour\", value=\"12\")}}\n  {{else}}\n    {{Set(name=\"twelve_current_hour\", value=Stringify(pm_hours.index(current_hour)))}}\n  {{/if}}\n{{/if}}\n\n{{Set(name=\"conversation_channel\", value=_utilsGetConversationChannelSkill(integrationIdn=_utilsGetCurrentIntegrationIdnSkill(userId=userId)))}}\n{{Set(name=\"working_hours_status\", value=_getWorkingHoursStatus(userId=userId))}}\n\n{{#system~}}\nconversation.timezone: {{time_zone}}\nconversation.channel: {{conversation_channel}}\nconversation.day_of_week: {{current_week_day}}\nconversation.time: {{current_hour}}:{{current_minute}}:{{current_second}} ({{twelve_current_hour}}:{{current_minute}} {{postfix}})\nconversation.date: {{current_date}}\n\n{{working_hours_status}}\n{{~/system}}\n\n{{SetPersonaAttribute(id=userId, field=\"conversation_meta\", value=GetCurrentPrompt())}}\n"
        }
      }
    },
    "start-session": {
      "type": "code",
      "name": "_startNewSessionSkill.hbs",
      "versions": {
        "v1": {
          "value": "{{StartNotInterruptibleBlock()}}\n\n{{#if GetPersonaAttribute(id=userId, field=\"previous_session_ended\") == \"False\"}}\n    {{Return()}}\n{{/if}}\n\n{{SendCommand(\n    commandIdn=\"add_phone_to_pool\",\n    integrationIdn=\"twilio_messenger\",\n    connectorIdn=\"sms_connector\"\n)}}\n\n{{SetPersonaAttribute(id=userId, field=\"previous_session_ended\", value=\"False\")}}\n{{Set(name=\"actor_id\", value=GetActor(field=\"id\"))}}\n\n{{UpdateConversationMetaSkill(userId=userId)}}\n\n{{!-- Reset session state --}}\n{{_utilsResetSessionStateSkill(userId=userId, actorId=actor_id, currentDateTime=currentDateTime)}}\n\n{{!-- TODO: Remove when `GetMemory` aliasing will be available --}}\n{{#if IsEmpty(text=GetPersonaAttribute(id=userId, field=\"name_was_extracted\"))}}\n    {{UpdateUser(name=\"name\", value=\"User\")}}\n{{/if}}\n\n{{! Building user's information (getting data up to date) }}\n{{Set(name=\"is_outbound_call\", value=_utilsPersonaAttributeGetWithDefaultsSkill(id=userId, field=\"outbound_call\", defaultValue=\"False\"))}}\n{{_buildUserInformationSkill(userId=userId, isOutboundCall=is_outbound_call)}}\n\n{{_utilsSendSystemLogSkill(message=\"New session started.\")}}\n\n{{!--\n{{Set(name=\"persona_name\", value=GetActor(field=\"name\"))}}\n{{Set(name=\"business_phone\", value=GetCustomerAttribute(field=\"project_business_public_phone\"))}}\n{{Set(name=\"business_name\", value=GetCustomerAttribute(field=\"project_business_name\"))}}\n--}}\n\n{{SetPersonaAttribute(id=userId, field=\"integrationIdn\", value=integrationIdn)}}\n{{SetPersonaAttribute(id=userId, field=\"connectorIdn\", value=GetTriggeredAct(fields=[\"connectorIdn\"]))}}\n{{SetPersonaAttribute(id=userId, field=\"actorId\", value=GetActor(field=\"id\"))}}\n{{SetPersonaAttribute(id=userId, field=\"externalActorId\", value=GetActor(field=\"externalId\"))}}\n\n{{SetPersonaAttribute(id=userId, field=\"convoagent_thoughts\", value=GetCustomerAttribute(field=\"project_attributes_setting_initial_thoughts\"))}}\n\n{{!-- TODO: Add additional parameters (metadata) --}}\n{{SendSystemEvent(eventIdn=\"session_started\")}}\n{{SendCommand(\n    commandIdn=\"session_started\",\n    integrationIdn=\"api\",\n    connectorIdn=\"webhook\",\n    actorId=actor_id\n)}}\n\n{{Set(name=\"set_intercom_actor\", value=\"False\")}}\n\n{{#if GetCustomerAttribute(field=\"project_attributes_setting_booking_type\") == \"intercom\"}}\n    {{Set(name=\"set_intercom_actor\", value=\"True\")}}\n{{/if}}\n\n{{#if GetCustomerAttribute(field=\"project_attributes_setting_booking_check_availability_type\") == \"intercom\"}}\n    {{Set(name=\"set_intercom_actor\", value=\"True\")}}\n{{/if}}\n\n{{#if set_intercom_actor == \"True\"}}\n    {{Set(name=\"external_id\", value=GetActor(field=\"externalId\"))}}\n    {{#if IsEmpty(text=GetPersonaAttribute(id=userId, field=\"intercom_actor\"))}}\n        {{SendCommand(\n            commandIdn=\"get_or_create_actor\",\n            integrationIdn=\"customer_intercom\",\n            connectorIdn=\"connection\",\n            externalId=external_id,\n            customEventIntegrationIdn=\"customer_intercom\",\n            customEventConnectorIdn=\"connection\",\n            userPersonaId=userId\n        )}}\n    {{/if}}\n    {{#if IsEmpty(text=GetPersonaAttribute(id=userId, field=\"intercom_client_actor_id\"))}}\n        {{SetPersonaAttribute(id=userId, field=\"intercom_client_actor_id\", value=CreateActor(integrationIdn=\"api\", connectorIdn=\"connection\", externalId=external_id, personaId=userId))}}\n    {{/if}}\n\n{{/if}}\n\n{{!--\n{{Set(name=\"report_enabled\", value=GetCustomerAttribute(field=\"project_attributes_setting_session_started_report_enabled\"))}}\n\n{{#If IsEmpty(text=report_enabled)}}\n    {{Set(name=report_enabled, value=\"False\")}}\n{{/if}}\n--}}\n\n{{!--\n{{#if report_enabled == \"True\"}}\n--}}\n{{!-- TODO: Discuss later - it is better to use only webhook as a more flexible approach --}}\n{{!-- TODO: Add newlines to SMS content --}}\n\n{{!-- TODO: Define phone number for sending reports, uncomment --}}\n{{!--\n    {{SendCommand(\n        commandIdn=\"send_message\",\n        integrationIdn=\"twilio_messenger\",\n        connectorIdn=\"sms_connector\",\n        text=Concat(\n            \"NEWO.AI: User started a new session. \",\n            \"Business Name: '\",\n            business_name,\n            \"'. \",\n            \"Actor Integration IDN: '\",\n            actorIntegrationIdn,\n            \"'. \",\n            \"Persona Name: '\",\n            persona_name,\n            \"'.\"\n        ),\n        phone_number=business_phone\n    )}}\n\n{{/if}}\n--}}\n\n{{StopNotInterruptibleBlock()}}\n"
        }
      }
    },
    "create-phone-actors": {
      "type": "code",
      "name": "_utilsCreatePhoneActorsSkill.hbs",
      "versions": {
        "v1": {
          "value": "{{! ! TODO: Handle case where existing Actors are located in another Persona }}\n{{! ? TODO: Merge Personas? }}\n\n{{! Create Actor for `Twilio Messenger` }}\n{{Set(name=\"existing_twilio_messenger_actors\", value=GetActors(integrationIdn=\"twilio_messenger\", connectorIdn=\"sms_connector\", externalId=phoneNumber))}}\n{{#if IsEmpty(text=existing_twilio_messenger_actors)}}\n  {{CreateActor(integrationIdn=\"twilio_messenger\", connectorIdn=\"sms_connector\", externalId=phoneNumber, personaId=userId)}}\n{{/if}}\n\n{{! Create Actor for `VAPI` }}\n{{Set(name=\"existing_vapi_actors\", value=GetActors(integrationIdn=\"vapi\", connectorIdn=\"vapi_caller\", externalId=phoneNumber))}}\n{{#if IsEmpty(text=existing_vapi_actors)}}\n  {{CreateActor(integrationIdn=\"vapi\", connectorIdn=\"vapi_caller\", externalId=phoneNumber, personaId=userId)}}\n{{/if}}\n\n{{! Create Actor for `NEWO Voice` }}\n{{Set(name=\"existing_newo_voice_actors\", value=GetActors(integrationIdn=\"newo_voice\", connectorIdn=\"newo_voice_connector\", externalId=phoneNumber))}}\n{{#if IsEmpty(text=existing_newo_voice_actors)}}\n  {{CreateActor(integrationIdn=\"newo_voice\", connectorIdn=\"newo_voice_connector\", externalId=phoneNumber, personaId=userId)}}\n{{/if}}\n"
        }
      }
    }
  },
  "subjectIndex": [
    "cs-skill",
    "common-cs",
    "switch-skill",
    "gen1-in",
    "gen1-out",
    "gen2-in",
    "gen2-out",
    "greet-out",
    "update-prompt",
    "make-fast-prompt",
    "gen2-fast-prompt",
    "set-followup",
    "update-meta",
    "start-session",
    "create-phone-actors"
  ],
  "languages": {
    "default": "handlebars"
  }
}